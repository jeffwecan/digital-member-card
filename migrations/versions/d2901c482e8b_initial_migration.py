"""Initial migration.

Revision ID: d2901c482e8b
Revises:
Create Date: 2022-02-11 12:00:06.093182

"""
import social_sqlalchemy
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d2901c482e8b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "social_auth_association",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("server_url", sa.String(length=255), nullable=True),
        sa.Column("handle", sa.String(length=255), nullable=True),
        sa.Column("secret", sa.String(length=255), nullable=True),
        sa.Column("issued", sa.Integer(), nullable=True),
        sa.Column("lifetime", sa.Integer(), nullable=True),
        sa.Column("assoc_type", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("server_url", "handle"),
    )
    op.create_table(
        "social_auth_code",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=200), nullable=True),
        sa.Column("code", sa.String(length=32), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code", "email"),
    )
    op.create_index(
        op.f("ix_social_auth_code_code"), "social_auth_code", ["code"], unique=False
    )
    op.create_table(
        "social_auth_nonce",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("server_url", sa.String(length=255), nullable=True),
        sa.Column("timestamp", sa.Integer(), nullable=True),
        sa.Column("salt", sa.String(length=40), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("server_url", "timestamp", "salt"),
    )
    op.create_table(
        "social_auth_partial",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=32), nullable=True),
        sa.Column("data", social_sqlalchemy.storage.JSONType(), nullable=True),
        sa.Column("next_step", sa.Integer(), nullable=True),
        sa.Column("backend", sa.String(length=32), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_social_auth_partial_token"),
        "social_auth_partial",
        ["token"],
        unique=False,
    )
    op.create_table(
        "table_metadata",
        sa.Column("table_name", sa.String(), nullable=False),
        sa.Column("attribute_name", sa.String(), nullable=False),
        sa.Column("attribute_value", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("table_name", "attribute_name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=200), nullable=True),
        sa.Column("email", sa.String(length=200), nullable=True),
        sa.Column("fullname", sa.String(length=100), nullable=True),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "annual_membership",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("order_id", sa.String(length=32), nullable=True),
        sa.Column("order_number", sa.String(), nullable=True),
        sa.Column("channel", sa.String(length=32), nullable=True),
        sa.Column("billing_address_first_name", sa.String(length=64), nullable=True),
        sa.Column("billing_address_last_name", sa.String(length=64), nullable=True),
        sa.Column("channel_name", sa.String(length=64), nullable=True),
        sa.Column("external_order_reference", sa.String(length=32), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("modified_on", sa.DateTime(), nullable=True),
        sa.Column("fulfilled_on", sa.DateTime(), nullable=True),
        sa.Column("customer_email", sa.String(length=120), nullable=True),
        sa.Column("line_item_id", sa.String(length=32), nullable=True),
        sa.Column("sku", sa.String(length=20), nullable=True),
        sa.Column("variant_id", sa.String(length=36), nullable=True),
        sa.Column("product_id", sa.String(length=32), nullable=True),
        sa.Column("product_name", sa.String(length=200), nullable=True),
        sa.Column("test_mode", sa.Boolean(), nullable=True),
        sa.Column(
            "fulfillment_status",
            sa.Enum("PENDING", "FULFILLED", "CANCELED", name="fulfillment_status_enum"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("order_id"),
        sa.UniqueConstraint("order_number"),
    )
    op.create_table(
        "membership_cards",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("serial_number", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("member_since", sa.DateTime(), nullable=True),
        sa.Column("member_until", sa.DateTime(), nullable=True),
        sa.Column("apple_pass_type_identifier", sa.String(), nullable=True),
        sa.Column("apple_organization_name", sa.String(), nullable=True),
        sa.Column("apple_team_identifier", sa.String(), nullable=True),
        sa.Column("web_service_url", sa.String(), nullable=True),
        sa.Column("authentication_token", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("qr_code_message", sa.String(), nullable=True),
        sa.Column("logo_text", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id", "serial_number"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "social_auth_usersocialauth",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("provider", sa.String(length=32), nullable=True),
        sa.Column("extra_data", social_sqlalchemy.storage.JSONType(), nullable=True),
        sa.Column("uid", sa.String(length=255), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_social_auth_usersocialauth_user_id"),
        "social_auth_usersocialauth",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "apple_device_registration",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("device_library_identifier", sa.String(length=255), nullable=True),
        sa.Column("push_token", sa.String(length=255), nullable=True),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "time_updated",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("membership_card_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["membership_card_id"],
            ["membership_cards.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("device_library_identifier"),
    )
    op.create_table(
        "membership_cards_to_memberships",
        sa.Column("membership_card_id", sa.Integer(), nullable=False),
        sa.Column("annual_membership_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["annual_membership_id"],
            ["annual_membership.id"],
        ),
        sa.ForeignKeyConstraint(
            ["membership_card_id"],
            ["membership_cards.id"],
        ),
        sa.PrimaryKeyConstraint("membership_card_id", "annual_membership_id"),
    )
    op.create_table(
        "membership_cards_to_apple_device",
        sa.Column("membership_card_id", sa.Integer(), nullable=False),
        sa.Column("apple_device_registration_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["apple_device_registration_id"],
            ["apple_device_registration.id"],
        ),
        sa.ForeignKeyConstraint(
            ["membership_card_id"],
            ["membership_cards.id"],
        ),
        sa.PrimaryKeyConstraint("membership_card_id", "apple_device_registration_id"),
    )
    # ### end Alembic commands ###
    sql = 'REASSIGN OWNED BY current_user TO "read_write"'
    op.execute(sql)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("membership_cards_to_apple_device")
    op.drop_table("membership_cards_to_memberships")
    op.drop_table("apple_device_registration")
    op.drop_index(
        op.f("ix_social_auth_usersocialauth_user_id"),
        table_name="social_auth_usersocialauth",
    )
    op.drop_table("social_auth_usersocialauth")
    op.drop_table("membership_cards")
    op.drop_table("annual_membership")
    op.drop_table("users")
    op.drop_table("table_metadata")
    op.drop_index(
        op.f("ix_social_auth_partial_token"), table_name="social_auth_partial"
    )
    op.drop_table("social_auth_partial")
    op.drop_table("social_auth_nonce")
    op.drop_index(op.f("ix_social_auth_code_code"), table_name="social_auth_code")
    op.drop_table("social_auth_code")
    op.drop_table("social_auth_association")
    # ### end Alembic commands ###
